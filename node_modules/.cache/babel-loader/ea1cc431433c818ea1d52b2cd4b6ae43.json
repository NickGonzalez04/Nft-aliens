{"ast":null,"code":"import { ethers } from 'ethers';\nimport DopeNft from \"../utils/dopeNft.json\"; //Address of deployed contract\n\nconst CONTRACT_ADDRESS = \"0x1238E2c79e1a138974cc9f620D845AC540c55C4b\"; // Event listener to the capture event function from contract.   \n\nexport const mintEventListener = async () => {\n  try {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, DopeNft.abi, signer); // Create connection to contract and emits (throws) it when from address and tokenId is passed in.\n\n      connectedContract.on(\"newAlienNFT\", (from, tokenId) => {\n        //safe check we have the right data\n        console.log(from, tokenId.toNumber());\n        alert(`Hey there! We've minted your NFT and sent it to your wallet. It may be blank right now. It can take a max of  to show up on OpenSea. Here's the link: https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${tokenId.toNumber()} or 10 minclick 'Ok' and we will take you to your new NFT:)`);\n        window.open(`https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${tokenId.toNumber()}`);\n      });\n    } else {\n      alert(`Oops something went wrong`);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/nicholas-g/buildspace-nft-course-starter/src/eth/helperFunc.js"],"names":["ethers","DopeNft","CONTRACT_ADDRESS","mintEventListener","ethereum","window","provider","providers","Web3Provider","signer","getSigner","connectedContract","Contract","abi","on","from","tokenId","console","log","toNumber","alert","open","error"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB,C,CAEA;;AACA,MAAMC,gBAAgB,GAAG,4CAAzB,C,CACA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,YAAY;AACzC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAeC,MAArB;;AACA,QAAID,QAAJ,EAAc;AACZ,YAAME,QAAQ,GAAG,IAAIN,MAAM,CAACO,SAAP,CAAiBC,YAArB,CAAkCJ,QAAlC,CAAjB;AACA,YAAMK,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AACA,YAAMC,iBAAiB,GAAG,IAAIX,MAAM,CAACY,QAAX,CACxBV,gBADwB,EAExBD,OAAO,CAACY,GAFgB,EAGxBJ,MAHwB,CAA1B,CAHY,CASZ;;AACAE,MAAAA,iBAAiB,CAACG,EAAlB,CAAqB,aAArB,EAAoC,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACrD;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,OAAO,CAACG,QAAR,EAAlB;AACAC,QAAAA,KAAK,CACF,4LAA2LlB,gBAAiB,IAAGc,OAAO,CAACG,QAAR,EAAmB,6DADhO,CAAL;AAGAd,QAAAA,MAAM,CAACgB,IAAP,CAAa,sCAAqCnB,gBAAiB,IAAGc,OAAO,CAACG,QAAR,EAAmB,EAAzF;AACD,OAPD;AAQD,KAlBD,MAkBO;AACLC,MAAAA,KAAK,CAAE,2BAAF,CAAL;AACD;AACF,GAvBD,CAuBE,OAAOE,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD;AACF,CA3BI","sourcesContent":["import { ethers } from 'ethers';\nimport DopeNft from \"../utils/dopeNft.json\";\n\n//Address of deployed contract\nconst CONTRACT_ADDRESS = \"0x1238E2c79e1a138974cc9f620D845AC540c55C4b\";\n// Event listener to the capture event function from contract.   \nexport const mintEventListener = async () => {\n    try {\n      const { ethereum } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(\n          CONTRACT_ADDRESS,\n          DopeNft.abi,\n          signer\n        );\n  \n        // Create connection to contract and emits (throws) it when from address and tokenId is passed in.\n        connectedContract.on(\"newAlienNFT\", (from, tokenId) => {\n          //safe check we have the right data\n          console.log(from, tokenId.toNumber());\n          alert(\n            `Hey there! We've minted your NFT and sent it to your wallet. It may be blank right now. It can take a max of  to show up on OpenSea. Here's the link: https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${tokenId.toNumber()} or 10 minclick 'Ok' and we will take you to your new NFT:)`\n          );\n          window.open(`https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${tokenId.toNumber()}`)\n        });\n      } else {\n        alert(`Oops something went wrong`);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  "]},"metadata":{},"sourceType":"module"}