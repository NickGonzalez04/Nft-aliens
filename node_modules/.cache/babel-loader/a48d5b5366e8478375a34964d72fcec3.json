{"ast":null,"code":"import { ethers } from 'ethers';\nimport DopeNft from \"../utils/dopeNft.json\";\nexport const triggerContractToMint = async () => {\n  const CONTRACT_ADDRESS = process.env.CONTRACT_ADDY;\n  console.log(CONTRACT_ADDRESS);\n\n  try {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, DopeNft.abi, signer);\n      console.log(\"Going to pop wallet now to pay gas...\");\n      let nftTranx = await connectedContract.dopeNft();\n      console.log(\"Mining...please wait.\");\n      await nftTranx.wait();\n      console.log(`Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTranx.hash}`);\n    } else {\n      console.log(\"Ethereum object doesn't exist!\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/nicholas-g/buildspace-nft-course-starter/src/eth/mintFunction.js"],"names":["ethers","DopeNft","triggerContractToMint","CONTRACT_ADDRESS","process","env","CONTRACT_ADDY","console","log","ethereum","window","provider","providers","Web3Provider","signer","getSigner","connectedContract","Contract","abi","nftTranx","dopeNft","wait","hash","error"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,OAAO,MAAMC,qBAAqB,GAAG,YAAY;AAC7C,QAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAArC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,gBAAZ;;AACA,MAAI;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAeC,MAArB;;AAEA,QAAID,QAAJ,EAAc;AACV,YAAME,QAAQ,GAAG,IAAIX,MAAM,CAACY,SAAP,CAAiBC,YAArB,CAAkCJ,QAAlC,CAAjB;AACA,YAAMK,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AACA,YAAMC,iBAAiB,GAAG,IAAIhB,MAAM,CAACiB,QAAX,CAAoBd,gBAApB,EAAsCF,OAAO,CAACiB,GAA9C,EAAmDJ,MAAnD,CAA1B;AAEAP,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACA,UAAIW,QAAQ,GAAG,MAAMH,iBAAiB,CAACI,OAAlB,EAArB;AAEAb,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,YAAMW,QAAQ,CAACE,IAAT,EAAN;AAEAd,MAAAA,OAAO,CAACC,GAAR,CAAa,2DAA0DW,QAAQ,CAACG,IAAK,EAArF;AAED,KAbH,MAaS;AACLf,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD;AACE,GAnBT,CAmBU,OAAOe,KAAP,EAAc;AAClBhB,IAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACD;AACJ,CAzBE","sourcesContent":["import { ethers } from 'ethers';\nimport DopeNft from \"../utils/dopeNft.json\";\n\nexport const triggerContractToMint = async () => {\n    const CONTRACT_ADDRESS = process.env.CONTRACT_ADDY;\n    console.log(CONTRACT_ADDRESS);\n    try {\n        const { ethereum } = window;\n\n        if (ethereum) {\n            const provider = new ethers.providers.Web3Provider(ethereum);\n            const signer = provider.getSigner();\n            const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, DopeNft.abi, signer);\n\n            console.log(\"Going to pop wallet now to pay gas...\");\n            let nftTranx = await connectedContract.dopeNft();\n\n            console.log(\"Mining...please wait.\")\n            await nftTranx.wait();\n            \n            console.log(`Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTranx.hash}`);\n    \n          } else {\n            console.log(\"Ethereum object doesn't exist!\");\n          }\n            } catch (error) {\n          console.log(error)\n        }\n    };"]},"metadata":{},"sourceType":"module"}